/*! For license information please see 294bc2f6.1fb9c2fd.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[797],{8638:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var o=r(4848),s=r(8453);const t={},i="ScenegraphNode",c={id:"api-reference/engine/scenegraph/scenegraph-node",title:"ScenegraphNode",description:"The ScenegraphNode is a base class for objects in the luma.gl scene graph, such as Model, Group and Camera. It holds the transformation matrix (i.e. the position, orientation and scale) of the object.",source:"@site/../docs/api-reference/engine/scenegraph/scenegraph-node.md",sourceDirName:"api-reference/engine/scenegraph",slug:"/api-reference/engine/scenegraph/scenegraph-node",permalink:"/docs/api-reference/engine/scenegraph/scenegraph-node",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/engine/scenegraph/scenegraph-node.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ModelNode",permalink:"/docs/api-reference/engine/scenegraph/model-node"},next:{title:"GPUPointInPolygon",permalink:"/docs/api-reference/engine/gpgpu/gpu-point-in-polygon"}},d={},l=[{value:"Usage",id:"usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Properties",id:"properties-1",level:2},{value:"matrix (<code>Number[16]</code>)",id:"matrix-number16",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(props : Object)",id:"constructorprops--object",level:3},{value:"setProps(props: Object)",id:"setpropsprops-object",level:3},{value:"getBounds() : [min: number[], max: number[]] | null",id:"getbounds--min-number-max-number--null",level:3},{value:"update() - DEPRECATED",id:"update---deprecated",level:3},{value:"Remarks",id:"remarks",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"scenegraphnode",children:"ScenegraphNode"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ScenegraphNode"})," is a base class for objects in the luma.gl scene graph, such as ",(0,o.jsx)(n.code,{children:"Model"}),", ",(0,o.jsx)(n.code,{children:"Group"})," and ",(0,o.jsx)(n.code,{children:"Camera"}),". It holds the transformation matrix (i.e. the position, orientation and scale) of the object."]}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ScenegraphNode"})," is a base class, normally only instantiated via base classes."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"const model = new Model();\nmodel\n  .setPosition([0, 1, 2])\n  .update();\n"})}),"\n",(0,o.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(n.p,{children:"A Model instance has a number of public properties that can be accessed/modified:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"position"})," (",(0,o.jsx)(n.em,{children:"object"}),") - A ",(0,o.jsx)(n.code,{children:"Vector3"})," indicating the position of the Model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"rotation"})," (",(0,o.jsx)(n.em,{children:"object"}),") - A ",(0,o.jsx)(n.code,{children:"Vector3"})," indicating the rotation of the Model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"scale"})," (",(0,o.jsx)(n.em,{children:"object"}),") - A ",(0,o.jsx)(n.code,{children:"Vecto3"})," indicating the scaling of the Model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"matrix"})," (",(0,o.jsx)(n.em,{children:"object"}),") - A ",(0,o.jsx)(n.code,{children:"Matrix4"})," containing information about position, rotation and scale."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This matrix gets updated each time the method ",(0,o.jsx)(n.code,{children:"update"})," is called on a Model instance."]}),"\n",(0,o.jsx)(n.h2,{id:"properties-1",children:"Properties"}),"\n",(0,o.jsxs)(n.h3,{id:"matrix-number16",children:["matrix (",(0,o.jsx)(n.code,{children:"Number[16]"}),")"]}),"\n",(0,o.jsx)(n.p,{children:"The model matrix of this scenegraph node."}),"\n",(0,o.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(n.h3,{id:"constructorprops--object",children:"constructor(props : Object)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"var node = new Model(gl, props);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"setpropsprops-object",children:"setProps(props: Object)"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"position"})," (",(0,o.jsx)(n.code,{children:"Number[3]"}),") - Sets the position part of the matrix"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"rotation"})," (",(0,o.jsx)(n.code,{children:"Number[3]"}),") - Sets the rotation part of the matrix"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"scale"})," (",(0,o.jsx)(n.code,{children:"Number[3]"}),") - Sets the scale part of the matrix"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Note that setting orientation props does not actually update the object's matrix. ",(0,o.jsx)(n.code,{children:"update()"})," must be called."]}),"\n",(0,o.jsx)(n.h3,{id:"getbounds--min-number-max-number--null",children:"getBounds() : [min: number[], max: number[]] | null"}),"\n",(0,o.jsx)(n.p,{children:"Calculate the bounding box of the node."}),"\n",(0,o.jsx)(n.h3,{id:"update---deprecated",children:"update() - DEPRECATED"}),"\n",(0,o.jsxs)(n.p,{children:["Update the model matrix. Useful to update changes to the ",(0,o.jsx)(n.code,{children:"position"}),", ",(0,o.jsx)(n.code,{children:"rotation"})," or ",(0,o.jsx)(n.code,{children:"scale"})," properties."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"node.update();\n"})}),"\n",(0,o.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Before luma.gl v7, ",(0,o.jsx)(n.code,{children:"ScenegraphNode"})," was called ",(0,o.jsx)(n.code,{children:"Object3D"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1020:(e,n,r)=>{var o=r(6540),s=Symbol.for("react.element"),t=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,c=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,r){var o,t={},l=null,a=null;for(o in void 0!==r&&(l=""+r),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(a=n.ref),n)i.call(n,o)&&!d.hasOwnProperty(o)&&(t[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===t[o]&&(t[o]=n[o]);return{$$typeof:s,type:e,key:l,ref:a,props:t,_owner:c.current}}n.Fragment=t,n.jsx=l,n.jsxs=l},4848:(e,n,r)=>{e.exports=r(1020)},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var o=r(6540);const s={},t=o.createContext(s);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);